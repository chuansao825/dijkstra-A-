#pragma once
#ifndef _PQ_H
#define	_PQ_H

#include "graph.h"



/*****************************************************************************
* @author  : bigbiginsulator/chuansao825                                                             *
* @date    :2021//11/29
* @file    :
* @brief   :一个基于小根堆的优先队列，基本数据元素是pair<index,disTo>
*****************************************************************************/
class PQ {
private:
	int length;	//小根堆数组的容量
	int N;		//优先队列的长度
	pair<int,double>* priotyqueue;		//优先队列的小根堆，first是点的序号，second是当前最短距离


	/*****************************************************************************
	* @name   :exch
	* @input   :两个小根堆的节点的下标
	* @output  :
	* @brief   :将两个节点的值交换
	*****************************************************************************/
	void exch(int index1, int index2);


public:

	/*****************************************************************************
	* @name   :PQ
	* @input   :小根堆数组的容量，极端情况下是numofedge
	* @output  :
	* @brief   :构造函数，创建储存小根堆的数组
	*****************************************************************************/
	PQ(int length);



	/*****************************************************************************
	* @name   :sink
	* @input   :要下沉的元素的下标
	* @output  :
	* @brief   :将该元素下沉使得小根堆重新有序
	*****************************************************************************/
	void sink(int index);



	/*****************************************************************************
	* @name   :swim
	* @input   :要上浮的节点的下标
	* @output  :
	* @brief   :使节点上浮到堆中的合适位置，使堆重新有序
	*****************************************************************************/
	void swim(int index);



	/*****************************************************************************
	* @name   :deleteMin
	* @input   :
	* @output  :edge*
	* @brief   :从优先队列中删除weight最小的节点并返回
	*****************************************************************************/
	pair<int, double>  deleteMin();



	/*****************************************************************************
	* @name   :add
	* @input   :edge*
	* @output  :
	* @brief   :将该边加入优先队列
	*****************************************************************************/
	void add(int index,double weight);


	/*****************************************************************************
	* @name   :isExist
	* @input   :
	* @output  :
	* @brief   :判断e1是否已在优先队列中，是的话返回true
	*****************************************************************************/
	bool isExist(int index);



	/*****************************************************************************
	* @name   :
	* @input   :要被修改的点的序号，修改后的当前最短距离
	* @output  :
	* @brief   :修改优先队列中节点的值
	*****************************************************************************/
	void changePQ(int index,double weight);



	/*****************************************************************************
	* @name   :
	* @input   :
	* @output  :int 
	* @brief   :返回优先队列中的元素个数
	*****************************************************************************/
	int getN();
};


#endif